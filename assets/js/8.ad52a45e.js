(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{354:function(t,e,s){"use strict";s.r(e);var r=s(42),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"eslint-配合-prettier-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eslint-配合-prettier-使用"}},[t._v("#")]),t._v(" Eslint 配合 prettier 使用")]),t._v(" "),s("ul",[s("li",[t._v("prettier 是一个对代码风格进行格式化的工具。")]),t._v(" "),s("li",[t._v("prettier 和 eslint 并没有直接关联, 如果要在 eslint 中使用 prettier 的风格规范， 就需使用 eslint 的插件 "),s("code",[t._v("eslint-plugin-prettier")]),t._v(", 这个插件作用是添加 prettier 作为 eslint 的规则配置, 把不符合 prettier 规范的代码进行提示。")]),t._v(" "),s("li",[t._v("eslint 默认可能会和 prettier 规范有冲突, 所以需要使用 eslint-config-prettier 插件关闭 eslint 中可能和 prettier 有冲突的规则。")])]),t._v(" "),s("ol",[s("li",[t._v("安装依赖")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" eslint prettier eslint-plugin-prettier eslint-config-prettier -D\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("添加 eslint 配置")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint:recommended"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"prettier/prettier"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("ol",[s("li",[t._v("eslint 支持插件名(plugins)和 extents 名字省略前面的 'eslint-plugin-' 和 'eslint-config-'")]),t._v(" "),s("li",[t._v("需要在 rules 中显示添加 "),s("code",[t._v('"prettier/prettier": "error"')]),t._v(", 表示被 prettier 标记的地方抛出错误信息。")])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("更改 prettier 默认风格规范")])]),t._v(" "),s("p",[t._v("添加 .prettierrc 文件可以覆盖掉 prettier 默认的规范。")]),t._v(" "),s("p",[t._v("常见的默认规则：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("printWidth: 80              // 一行最多字符数\ntabWidth: 2                 // 使用2个空格缩进\nuseTabs: false              // 是否使用tab 作为缩进，默认使用 空格作为缩进         \nsemi: true                  // 行尾要有分号\nsingleQuote: false          // 使用单引号\ntrailingComma: es5          // 行尾不需要加逗号\nnoBracketSpacing: true      // 大括号的首位需要加空格\narrowParens: always         // 箭头函数，只有一个参数的时候，也需要括号 \n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);