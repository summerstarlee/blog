(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{412:function(e,r,t){"use strict";t.r(r);var u=t(42),o=Object(u.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"hello-vue-router"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hello-vue-router"}},[e._v("#")]),e._v(" Hello Vue-router")]),e._v(" "),t("p",[e._v("Vue-router 是 Vue 官方维护的一套路由管理插件， 在 vue-router 的使用实践过程中和对 vue-router 源码阅读后我萌生了重写一个轮子的念头。起初的想法是按照 vue-router 的源码执行顺序来一行行的解读，但是在我阅读源码之后发现 vue-router 虽然是一个很小的库， 并且 history 或 hash 模式的路由机制也在许多文章中讲得非常明白，但是作为一个库，里面的代码依旧是复杂的， 如果是一行行的对源代码解读，代码逻辑会很快搅乱 vue-router 的核心主线，因此决定使用另外一种 vue-router 解读的方式 -- 抛出需求，找出源码中的实现，这样由需求到实现的过程中分割源码，更好的理解 vue-router 里的每一行代码是为了解决什么样的需求。")]),e._v(" "),t("p",[e._v("vue-router 参考版本："),t("code",[e._v("3.1.6")])]),e._v(" "),t("p",[e._v("其他参考文章:\n"),t("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/v2/vue-router/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue.js 技术揭秘"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[t("RouterLink",{attrs:{to:"/vue-router/simple.html"}},[e._v("创建 router-view router-link 组件实现基于hash 模式的路由替换。")])],1)])])}),[],!1,null,null,null);r.default=o.exports}}]);